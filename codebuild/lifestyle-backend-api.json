{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "lifestyle-backend-api"
  },
  "basePath": "/lifestyle-backend-api",
  "schemes": [
    "https"
  ],
  "paths": {
    "/update": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "description": "400 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::XXXX:role/lifestyle-lambda-role",
          "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:XXXX:function:lifestyle-updateitem/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            ".*\"code\":400.*": {
              "statusCode": "400",
              "responseTemplates": {
                "application/json": "$input.path('$.errorMessage')"
              }
            },
            ".*\"code\":500.*": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "$input.path('$.errorMessage')"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.page": "method.request.querystring.page"
          },
          "requestTemplates": {
            "application/json": "{\r\n\"page\": \"$input.params('page')\"\r\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/add": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "description": "400 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::XXXX:role/lifestyle-lambda-role",
          "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:XXXXX:function:lifestyle-additem/invocations",
          "responses": {
            "default": {
              "statusCode": "200"
            },
            ".*\"code\":400.*": {
              "statusCode": "400",
              "responseTemplates": {
                "application/json": "$input.path('$.errorMessage')"
              }
            },
            ".*\"code\":500.*": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "$input.path('$.errorMessage')"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.page": "method.request.querystring.page"
          },
          "requestTemplates": {
            "application/json": "{\r\n\"page\": \"$input.params('page')\"\r\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    },
    "/list": {
      "get": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search_query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "video_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "playlist",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_category",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_key",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "islatest",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers":{
              "Access-Control-Allow-Headers":{
                "type": "string"
              },
              "Access-Control-Allow-Methods":{
                "type": "string"
              },
              "Access-Control-Allow-Origin":{
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          },
          "400": {
            "description": "400 response"
          },
          "500": {
            "description": "500 response"
          }
        },
        "x-amazon-apigateway-integration": {
          "credentials": "arn:aws:iam::XXXX:role/lifestyle-lambda-role",
          "uri": "arn:aws:apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-southeast-1:XXXX:function:lifestyle-api/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters":{
                "method.response.header.Access-Control-Allow-Headers" : "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                "method.response.header.Access-Control-Allow-Methods" : "'*'",
                "method.response.header.Access-Control-Allow-Origin" : "'*'"
              }
            },
            ".*\"code\":400.*": {
              "statusCode": "400",
              "responseTemplates": {
                "application/json": "$input.path('$.errorMessage')"
              }
            },
            ".*\"code\":500.*": {
              "statusCode": "500",
              "responseTemplates": {
                "application/json": "$input.path('$.errorMessage')"
              }
            }
          },
          "requestParameters": {
            "integration.request.querystring.search_query": "method.request.querystring.search_query"
          },
          "requestTemplates": {
            "application/json": "{\r\n\"search_query\": \"$input.params('search_query')\",\r\n\"video_id\":\"$input.params('video_id')\",\r\n\"category\": \"$input.params('category')\",\r\n\"limit\":\"$input.params('limit')\",\r\n\"playlist\":\"$input.params('playlist')\",\r\n\"user_category\":\"$input.params('user_category')\",\r\n\"last_key\":\"$input.params('last_key')\",\r\n\"islatest\":\"$input.params('islatest')\"\r\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
    }
  },
  "definitions": {
    "Empty": {
      "type": "object",
      "title": "Empty Schema"
    }
  }
}
